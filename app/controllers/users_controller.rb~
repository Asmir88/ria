class UsersController < ApplicationController
  skip_before_filter :authorize, :only => [:new, :create, :forgot, :reply]
  
  # GET /users
  # GET /users.xml
  def index
    @users = User.order(:name)

    respond_to do |format|
      format.html # index.html.erb
      format.xml  { render :xml => @users }
    end
  end

  # GET /users/1
  # GET /users/1.xml
  def show
    @user = User.find(params[:id])
    @topics = @user.topics
    respond_to do |format|
      format.html # show.html.erb
      format.xml  { render :xml => @user }
    end
  end

  # GET /users/new
  # GET /users/new.xml
  def new
    @user = User.new

    respond_to do |format|
      format.html # new.html.erb
      format.xml  { render :xml => @user }
    end
  end

  # GET /users/1/edit
  def edit
    @user = User.find(params[:id])
    @images = %w{avatar.jpg batman.jpg bobafett.jpg bugsbunny.jpg goku.jpg mickeymouse.jpg superman.jpg}
  end

  # POST /users
  # POST /users.xml
  def create
  
  begin
  
    @user = User.new(params[:user])
    
    #session[:user_id]=@user.id

    respond_to do |format|
      if @user.save
        UserMailer.send_signup_email(@user).deliver
        session[:user_id]=@user.id        
        format.html { redirect_to(root_url,
          :notice => "Hi, #{User.find(session[:user_id]).name}. You have successfully signed up!") }
        format.xml  { render :xml => @user,
          :status => :created, :location => @user }
      else
        #format.html { redirect_to(signup_path, :alert => "Please fill up all fields.") }
        #format.xml  { render :xml => @user.errors,
        #  :status => :unprocessable_entity }
        format.html { render :action => "new" }
        format.xml  { render :xml => @user.errors,
          :status => :unprocessable_entity }
      end
    end
    
    rescue Net::SMTPFatalError => e
        
        @user.destroy
        redirect_to(signup_path, :alert => "The e-mail address is not valid!")
    
    end
    
  end

  # PUT /users/1
  # PUT /users/1.xml
  def update
    @user = User.find(params[:id])

    respond_to do |format|
      if @user.update_attributes(params[:user])
        format.html { redirect_to(user_path(@user),
          :notice => "User #{@user.name} was successfully updated.") }
        format.xml  { head :ok }
      else
        format.html { render :action => "edit" }
        format.xml  { render :xml => @user.errors,
          :status => :unprocessable_entity }
      end
    end
  end

  # DELETE /users/1
  # DELETE /users/1.xml
  def destroy
    @user = User.find(params[:id])
    @user.destroy
    
    if @user.id == session[:user_id]
      session[:user_id] = nil
    end
    
    @forum = Forum.find_all_by_author_id(@user.id)
    if @forum != []
      @forum.each do |f|
        f.author_id = nil
        f.save
      end
    end
    
    @last_poster = Forum.find_all_by_last_poster_id(@user.id)
    if @last_poster != []
      @last_poster.each do |f|
        f.last_poster_id = nil
        f.save
      end
    end
    
    
    respond_to do |format|
      format.html { redirect_to users_url, :notice => "User #{@user.name} was successfully deleted." }
      format.xml  { head :ok }
    end
  end
  
  
  def forgot
  end
  
  def reply
    @user = User.find_by_email(params[:email])
      if @user
        UserMailer.send_password(@user).deliver
        redirect_to login_path, :notice => "You have been sent an email at you address #{params[:email]} with the informations about your account."
      else
        redirect_to signup_path, :notice => "The email address #{params[:email]} does not exist in our database. Please sign up!"
      end
  end
  
  
end
